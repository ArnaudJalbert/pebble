name: Python Code Quality
on: [push]
jobs:
  check_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check pypi versions
        uses: maybe-hello-world/pyproject-check-version@v4
        id: versioncheck
        with:
          pyproject-path: "./pyproject.toml"
          test-regex: "[0-9]+.[0-9]+.[0-9]+rc[0-9]+"

      - name: check output
        run: |
          echo "Output: ${{ steps.versioncheck.outputs.local_version_is_higher }}"  # 'true' or 'false
          echo "Local version: ${{ steps.versioncheck.outputs.local_version }}"     # e.g., 0.1.1
          echo "Public version: ${{ steps.versioncheck.outputs.public_version }}"   # e.g., 0.1.0
          echo "Is test: ${{ steps.versioncheck.outputs.is_test }}"   # e.g., 'true' or 'false'
  lock_file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv lock --locked
  ruff_check:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uvx ruff check ./src
  ruff_format:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uvx ruff format ./src
  tests:
    runs-on: ubuntu-latest
    needs: [ lock_file ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv run pytest -v --durations=0 --cov --cov-report=xml
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    runs-on: [ ubuntu-latest ]
    needs: [ ruff_check, ruff_format, tests ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv build